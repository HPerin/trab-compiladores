	.intel_syntax noprefix
z:
	.long 0
b:
	.long 2
d:
	.long 1
i:
	.long 0
j:
	.long 3
	.globl v
	.align 4
	.type v, @object
	.size v, 40
v:
	.long 0
	.long 0
	.long 0
	.long 0
	.long 0
	.long 0
	.long 0
	.long 0
	.long 0
	.long 0
	.zero 40
	.globl vas
	.align 4
	.type vas, @object
	.size vas, 8
vas:
	.zero 8
	.globl mat
	.align 4
	.type mat, @object
	.size mat, 4000
mat:
	.zero 4000
a:
	.long 50
	.globl incn
	.type incn, @function
incn:
	push ebp
	mov ebp, esp
	.comm x,4
	mov eax, DWORD PTR [ebp+8]
	mov x, eax
	.comm n,4
	mov eax, DWORD PTR [ebp+12]
	mov n, eax
	.comm _temp_n1007,4
	mov DWORD PTR _temp_n1007, 5
	mov eax, DWORD PTR _temp_n1007
	test eax, 0x00000000
	jne _label_n1000004
	je _label_n1000005
_label_n1000004:
	.comm _temp_n1010,4
	mov eax, DWORD PTR j
	imul eax, eax, 2
	mov DWORD PTR _temp_n1010, eax
	.comm _temp_n1011,4
	mov eax, DWORD PTR _temp_n1010
	imul eax, eax, 1
	mov DWORD PTR _temp_n1011, eax
	.comm _temp_n1012,4
	mov edx, DWORD PTR a
	mov eax, DWORD PTR _temp_n1011
	add eax, edx
	mov DWORD PTR _temp_n1012, eax
	mov eax, DWORD PTR _temp_n1012
	pop ebp
	ret


_label_n1000005:
	.comm _temp_n1008,4
	mov eax, DWORD PTR a
	add eax, 2
	mov DWORD PTR _temp_n1008, eax
	.comm _temp_n1009,4
	mov eax, DWORD PTR _temp_n1009
	pop ebp
	ret


	mov eax, 0
	pop ebp
	ret


	.globl main
	.type main, @function
main:
	.LC0: .string "Digite um numero: "
	 push OFFSET FLAT: .LC0
	 call printf
_label_n1000000:
	.comm _temp_n1000,4
	mov eax, DWORD PTR i
	cmp eax, 10
	setl al
	xor ebx, ebx
	mov bl, al
	mov DWORD PTR _temp_n1000, ebx
	.comm _temp_n1001,4
	mov eax, DWORD PTR _temp_n1000
	mov ebx, DWORD PTR j
	or eax,  ebx
	mov DWORD PTR _temp_n1001, eax
	.comm _temp_n1002,4
	mov eax, DWORD PTR _temp_n1001
	cmp eax, 20
	setge al
	xor ebx, ebx
	mov bl, al
	mov DWORD PTR _temp_n1002, ebx
	.comm _temp_n1003,4
	mov eax, DWORD PTR _temp_n1002
	and eax,  2
	mov DWORD PTR _temp_n1003, eax
	mov eax, DWORD PTR _temp_n1003
	test eax, 0x00000000
	jne _label_n1000001
	je _label_n1000002
_label_n1000001:
	mov eax, 2
	push eax
	mov eax, 3
	push eax
	.comm _temp_n1006,4
	call incn
_label_n1000003:
	.comm _temp_n1004,4
	.comm _temp_n1005,4
	mov eax, DWORD PTR _temp_n1004
	add eax, 1
	mov DWORD PTR _temp_n1005, eax
	mov eax, DWORD PTR _temp_n1005
	mov DWORD PTR i, eax
	jmp _label_n1000000
_label_n1000002:
	.LC1: .string "Incrementado algumas vezes fica "
	 push OFFSET FLAT: .LC1
	 call printf
	.LC3: .string "\n"
	 push OFFSET FLAT: .LC3
	 call printf
	mov eax, 0
	pop ebp
	ret


